COMPUTED VALUES:
affinity: {}
auth:
  args:
  - --oidc-issuer-url=https://preprod.login.w3.ibm.com/oidc/endpoint/default
  - --client-secret=YWQ3MmI3MjMtMjc0ZC00
  - --client-id=MWU4Yzc1ZGYtZmQwMS00
  - --cookie-secure=true
  - --cookie-path=/dev
  - --cookie-refresh=1h45m0s
  - --upstream=file:///dev/null
  - --http-address=0.0.0.0:4180
  - --cookie-secret=UK4Hdu+wgMpDXKoX01/JdQ==
  - --scope=openid
  - --set-authorization-header=true
  - --pass-authorization-header=true
  - --skip-provider-button=true
  - --skip-oidc-discovery=false
  - --insecure-oidc-allow-unverified-email=true
  - --cookie-expire=24h0m0s
  - --whitelist-domain=preprod.login.w3.ibm.com
  - --set-basic-auth=false
  - --user-id-claim=emailAddress
  displayHtpasswdForm: false
  provider: oidc
authorization:
  allowEmailList:
    emailList:
    - Automation.Platform.Services@ibm.com
    enabled: false
    name: null
    persistence: secret
  emailDomains: '*'
bmrgcommon:
  global: {}
configMap: {}
general:
  namePrefix: iap-auth-proxy
  zone: untrusted
image:
  pullPolicy: IfNotPresent
  #pullSecret: ocp.registrykey.v1
  registry: boomerangio
  replicaCount: 1
ingress:
  annotationsPrefix: ingress.kubernetes.io
  class: nginx
  enabled: true
  host: devcluster-9fb7e40700ceec3a76e70fdb30f06230-0000.eu-de.containers.appdomain.cloud
  path: /dev/oauth
  tlsSecretName: devcluster-9fb7e40700ceec3a76e70fdb30f06230-0000
nodeSelector: {}
redis:
  cluster:
    enabled: false
    slaveCount: 1
  clusterDomain: cluster.local
  configmap: |-
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
  enabled: true
  global:
    redis: {}
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/redis
    tag: 5.0.8-debian-10-r21
  master:
    affinity: {}
    command: /run.sh
    configmap: null
    disableCommands:
    - FLUSHDB
    - FLUSHALL
    extraFlags: []
    livenessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
    nodeSelector: {}
    persistence:
      accessModes:
      - ReadWriteOnce
      enabled: false
      matchExpressions: {}
      matchLabels: {}
      path: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podLabels: {}
    readinessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    service:
      annotations: {}
      labels: {}
      loadBalancerIP: null
      port: 6379
      type: ClusterIP
    statefulset:
      updateStrategy: RollingUpdate
    tolerations:
    - effect: NoSchedule
      key: dedicated
      operator: Exists
  metrics:
    enabled: false
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/redis-exporter
      tag: 1.5.2-debian-10-r13
    podAnnotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
    prometheusRule:
      additionalLabels: {}
      enabled: false
      namespace: ""
      rules: []
    service:
      annotations: {}
      labels: {}
      type: ClusterIP
    serviceMonitor:
      enabled: false
      selector:
        prometheus: kube-prometheus
  networkPolicy:
    enabled: false
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  password: ""
  persistence: {}
  podSecurityPolicy:
    create: false
  rbac:
    create: false
    role:
      rules: []
  redisPort: 6379
  securityContext:
    enabled: false
    fsGroup: 1001
    runAsUser: 1001
  sentinel:
    configmap: null
    downAfterMilliseconds: 60000
    enabled: false
    failoverTimeout: 18000
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/redis-sentinel
      tag: 5.0.8-debian-10-r17
    initialCheckTimeout: 5
    livenessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
    masterSet: mymaster
    parallelSyncs: 1
    port: 26379
    quorum: 2
    readinessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    service:
      annotations: {}
      labels: {}
      loadBalancerIP: null
      redisPort: 6379
      sentinelPort: 26379
      type: ClusterIP
    staticID: false
    usePassword: true
  serviceAccount:
    create: false
    name: null
  slave:
    affinity: {}
    command: /run.sh
    configmap: null
    disableCommands:
    - FLUSHDB
    - FLUSHALL
    extraFlags: []
    livenessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    persistence:
      accessModes:
      - ReadWriteOnce
      enabled: false
      matchExpressions: {}
      matchLabels: {}
      path: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podLabels: {}
    port: 6379
    readinessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    service:
      annotations: {}
      labels: {}
      loadBalancerIP: null
      port: 6379
      type: ClusterIP
    statefulset:
      updateStrategy: RollingUpdate
  sysctlImage:
    command: []
    enabled: false
    mountHostSys: false
    pullPolicy: Always
    registry: docker.io
    repository: bitnami/minideb
    resources: {}
    tag: buster
  usePassword: false
  usePasswordFile: false
  volumePermissions:
    enabled: false
    image:
      pullPolicy: Always
      registry: docker.io
      repository: bitnami/minideb
      tag: buster
    resources: {}
services:
  authProxy:
    image:
      repository: /oauth2-proxy
      tag: 7.1.3-bmrg.8
tolerations:
- effect: NoSchedule
  key: dedicated
  operator: Exists
