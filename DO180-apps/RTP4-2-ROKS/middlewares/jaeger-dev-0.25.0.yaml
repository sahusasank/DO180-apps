COMPUTED VALUES:
agent:
  affinity: {}
  annotations: {}
  cmdlineParams: {}
  daemonset:
    useHostPort: false
  dnsPolicy: ClusterFirst
  enabled: true
  env: {}
  extraConfigmapMounts: []
  extraSecretMounts: []
  image: jaegertracing/jaeger-agent
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  pullPolicy: IfNotPresent
  resources: {}
  securityContext: {}
  service:
    annotations: {}
    binaryPort: 6832
    compactPort: 6831
    loadBalancerSourceRanges: []
    samplingPort: 5778
    type: ClusterIP
    zipkinThriftPort: 5775
  serviceAccount:
    create: false
    name: dev-es-jaeger-sa
  tolerations: []
  useHostNetwork: false
cassandra:
  config:
    cluster_name: jaeger
    dc_name: dc1
    endpoint_snitch: GossipingPropertyFileSnitch
    rack_name: rack1
    seed_size: 1
  persistence:
    enabled: false
collector:
  affinity: {}
  annotations: {}
  autoscaling:
    enabled: false
    maxReplicas: 10
    minReplicas: 2
  cmdlineParams: {}
  dnsPolicy: ClusterFirst
  enabled: true
  env: {}
  extraConfigmapMounts: []
  extraSecretMounts: []
  image: jaegertracing/jaeger-collector
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  pullPolicy: IfNotPresent
  replicaCount: 1
  resources: {}
  securityContext: {}
  service:
    annotations: {}
    grpc:
      port: 14250
    http:
      port: 14268
    loadBalancerSourceRanges: []
    tchannel:
      port: 14267
    type: ClusterIP
    zipkin: {}
  serviceAccount:
    create: false
    name: dev-es-jaeger-sa
  tolerations: []
elasticsearch: {}
esIndexCleaner:
  affinity: {}
  annotations: {}
  cmdlineParams: {}
  enabled: true
  extraConfigmapMounts: []
  extraSecretMounts: []
  failedJobsHistoryLimit: 3
  image: jaegertracing/jaeger-es-index-cleaner
  nodeSelector: {}
  numberOfDays: 3
  podLabels: {}
  podSecurityContext:
    runAsUser: 1000
  pullPolicy: Always
  resources: {}
  schedule: 59 23 * * *
  securityContext:
    runAsUser: 1000
  serviceAccount:
    create: false
    name: dev-es-jaeger-sa
  successfulJobsHistoryLimit: 3
  tag: latest
  tolerations: []
fullnameOverride: ""
hotrod:
  affinity: {}
  enabled: false
  image:
    pullPolicy: Always
    repository: jaegertracing/example-hotrod
  ingress:
    annotations: {}
    enabled: false
    hosts:
    - chart-example.local
  nodeSelector: {}
  podSecurityContext: {}
  replicaCount: 1
  resources: {}
  securityContext: {}
  service:
    annotations: {}
    loadBalancerSourceRanges: []
    name: hotrod
    port: 80
    type: ClusterIP
  serviceAccount:
    create: true
  tolerations: []
  tracing:
    port: 6831
ingester:
  affinity: {}
  annotations: {}
  autoscaling:
    enabled: false
    maxReplicas: 10
    minReplicas: 2
  cmdlineParams: {}
  dnsPolicy: ClusterFirst
  enabled: false
  env: {}
  extraConfigmapMounts: []
  extraSecretMounts: []
  image: jaegertracing/jaeger-ingester
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  pullPolicy: IfNotPresent
  replicaCount: 1
  resources: {}
  securityContext: {}
  service:
    annotations: {}
    loadBalancerSourceRanges: []
    type: ClusterIP
  serviceAccount:
    create: true
  tolerations: []
kafka:
  configurationOverrides:
    auto.create.topics.enable: true
  replicas: 1
  zookeeper:
    replicaCount: 1
nameOverride: ""
provisionDataStore:
  cassandra: false
  elasticsearch: false
  kafka: false
query:
  affinity: {}
  agentSidecar:
    enabled: true
  annotations: {}
  basePath: /ops/jaeger
  cmdlineParams: {}
  dnsPolicy: ClusterFirst
  enabled: true
  env: {}
  extraConfigmapMounts: []
  image: jaegertracing/jaeger-query
  ingress:
    annotations: {}
    enabled: false
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  pullPolicy: IfNotPresent
  replicaCount: 1
  resources: {}
  securityContext: {}
  service:
    annotations: {}
    loadBalancerSourceRanges: []
    port: 80
    type: ClusterIP
  serviceAccount:
    create: false
    name: dev-es-jaeger-sa
  tolerations: []
schema:
  activeDeadlineSeconds: 300
  annotations: {}
  env:
    MODE: prod
  image: jaegertracing/jaeger-cassandra-schema
  podLabels: {}
  pullPolicy: IfNotPresent
  resources: {}
  serviceAccount:
    create: true
spark:
  affinity: {}
  annotations: {}
  cmdlineParams: {}
  enabled: false
  extraConfigmapMounts: []
  extraSecretMounts: []
  failedJobsHistoryLimit: 5
  image: jaegertracing/spark-dependencies
  nodeSelector: {}
  podLabels: {}
  pullPolicy: Always
  resources: {}
  schedule: 49 23 * * *
  serviceAccount:
    create: true
  successfulJobsHistoryLimit: 5
  tag: latest
  tolerations: []
storage:
  cassandra:
    cmdlineParams: {}
    env: {}
    host: cassandra
    keyspace: jaeger_v1_test
    password: password
    port: 9042
    tls:
      enabled: false
      secretName: cassandra-tls-secret
    usePassword: true
    user: user
  elasticsearch:
    cmdlineParams:
      es.num-replicas: "0"
    env: {}
    host: elasticsearch-master.jaeger-dev.svc.cluster.local
    nodesWanOnly: false
    password: changeme
    port: 9200
    scheme: http
    usePassword: true
    user: elastic
  kafka:
    authentication: none
    brokers:
    - kafka:9092
    topic: jaeger_v1_test
  type: elasticsearch
tag: 1.17.0
