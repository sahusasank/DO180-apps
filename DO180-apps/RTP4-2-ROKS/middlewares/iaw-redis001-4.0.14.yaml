COMPUTED VALUES:
cluster:
  enabled: true
  slaveCount: 1
configmap: '# maxmemory-policy volatile-lru'
image:
  pullPolicy: Always
  registry: docker.io
  repository: bitnami/redis
  tag: 4.0.14
master:
  affinity: {}
  command: /run.sh
  disableCommands:
  - FLUSHDB
  - FLUSHALL
  extraFlags: []
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 5
  persistence:
    accessModes:
    - ReadWriteOnce
    enabled: true
    path: /data
    size: 2Gi
    subPath: ""
  podAnnotations: {}
  podLabels: {}
  port: 6379
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  service:
    annotations: {}
    port: 6379
    type: ClusterIP
  statefulset:
    updateStrategy: RollingUpdate
metrics:
  enabled: true
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: oliver006/redis_exporter
    tag: v0.28.0
  service:
    annotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
    type: ClusterIP
  serviceMonitor:
    enabled: true
    namespace: openshift-monitoring
    selector:
      prometheus: kube-prometheus
networkPolicy:
  enabled: false
persistence: {}
rbac:
  create: false
  role:
    rules: []
serviceAccount:
  create: false
slave:
  affinity: {}
  service:
    annotations: {}
    type: ClusterIP
sysctlImage:
  command: []
  enabled: false
  mountHostSys: false
  pullPolicy: Always
  registry: docker.io
  repository: bitnami/minideb
  resources: {}
  tag: latest
usePassword: false
usePasswordFile: false
volumePermissions:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/minideb
    tag: latest
  resources: {}
