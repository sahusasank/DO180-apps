apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
     matchLabels:
       app: {{ template "name" . }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-shortInterval={{.Values.camunda.shortInterval}}"
            - "-longInterval={{.Values.camunda.longInterval}}"
            - "-server={{.Values.camunda.server}}"
            - "-restPrefix={{.Values.camunda.restPrefix}}"
            - "-port={{.Values.service.internalPort}}"
            - "-verbose={{.Values.camunda.verbose}}"
            - "-fetch-runtime={{.Values.camunda.fetchRuntime}}"
            #- "-fetch-history={{.Values.camunda.fetchHistory}}"
            - "-fetch-metrics={{.Values.camunda.fetchMetrics}}"
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          #livenessProbe:
          #  httpGet:
          #    path: /metrics
          #    port: {{ .Values.service.internalPort }}
          #readinessProbe:
          #  httpGet:
          #    path: /metrics
          #    port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
